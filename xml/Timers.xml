<?xml version="1.0" encoding="UTF-8"?>
<timers>
    <timer>
        <name>autoclosevideoosd</name>
        <description>Timer to auto close the video OSD (if enabled in the skin settings)</description>
        <start reset="true">Window.IsActive(videoosd) + Skin.HasSetting(OSDAutoClose) + !String.IsEqual(window(home).Property(settingslist_content),osd) + !Window.IsActive(osdsubtitlesettings) + !Window.IsActive(osdaudiosettings) + !Window.IsActive(osdvideosettings) + !Window.IsActive(OSDCMSSettings)</start>
        <reset>Window.IsActive(videoosd) + !System.IdleTime(1) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd), 1) | String.IsEqual(window(home).Property(settingslist_content),osd) | Window.IsActive(osdsubtitlesettings) | Window.IsActive(osdaudiosettings) | Window.IsActive(osdvideosettings) | Window.IsActive(OSDCMSSettings)</reset>
        <stop>!Window.IsActive(videoosd) | String.IsEmpty(Skin.String(OSDAutoCloseTime)) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd), 4) | !String.IsEmpty(Skin.String(OSDAutoCloseTime)) + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(autoclosevideoosd),Skin.Numeric(OSDAutoCloseTime))</stop>
        <onstop>Dialog.Close(videoosd)</onstop>
    </timer>
    <timer>
        <name>1110_topbaroverlay</name>
        <description>A timer that is activated when the topbaroverlay is loaded and stops automatically after 5 seconds (or playback is resumed)</description>
        <stop>!Player.Paused | Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(1110_topbaroverlay),5)</stop>
    </timer>
    <timer>
        <name>scrolltimer</name>
        <description>Timer that is activated when a widget is focused</description>
        <start reset="true">Control.HasFocus($PARAM[list_id])</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(scrolltimer),1)</stop>
        <!-- <onstart>Notification(skintimer, Timer started, 1000)</onstart>
        <onstop>Notification(skintimer, Timer stopped, 1000)</onstop> -->
    </timer>
    <timer>
        <name>navigationtimer</name>
        <description>Timer to clear the navigation tracking property</description>
        <start reset="true">Control.HasFocus($PARAM[list_id])</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(navigationtimer),0.5)</stop>
        <onstop>Skin.Reset(mainMenuFocused)</onstop>
        <!-- <onstart>Notification(skintimer, My timer was started, 1000)</onstart>
        <onstop>Notification(skintimer, My timer was stopped, 1000)</onstop> -->
    </timer>
    <timer>
        <name>wallscrolltimer</name>
        <description>Timer to automatically return to Flix view</description>
        <start reset="true">Control.HasFocus($PARAM[list_id])</start>
        <stop>Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(wallscrolltimer),2)</stop>
        <onstop condition="Control.IsVisible(500) + ![Control.HasFocus(532) | ControlGroup(9000).HasFocus]">Container.SetViewMode(54)</onstop>
        <!-- <onstart>Notification(skintimer, My timer was started, 1000)</onstart>
        <onstop>Notification(skintimer, My timer was stopped, 1000)</onstop> -->
    </timer>
</timers>
