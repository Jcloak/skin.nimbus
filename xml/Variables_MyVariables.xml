<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="Nimbus_Divider">
		<value>[COLOR accent_color][B]|[/B][/COLOR]</value>
	</variable>
	<!-- Return a single genre -->
  <variable name="GenreVar">
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Action)">Action</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Adventure)">Adventure</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Animation)">Animation</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Comedy)">Comedy</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Crime)">Crime</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Documentary)">Documentary</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Drama)">Drama</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Family)">Family</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Fantasy)">Fantasy</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Kids)">Kids</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,History)">History</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Horror)">Horror</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Music)">Music</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Mystery)">Mystery</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,News)">News</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Reality)">Reality</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Romance)">Romance</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Science Fiction)">Sci-Fi</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Sci-Fi)">Sci-Fi</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Soap)">Soap</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,TV Movie)">TV Movie</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Thriller)">Thriller</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,War)">War</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + String.StartsWith(ListItem.Genre,Western)">Western</value>
	</variable>

	<variable name="StatusVar">
		<value condition="!String.IsEmpty(ListItem.Status) + String.StartsWith(ListItem.Status,Returning)">Returning</value>
		<value>$INFO[Container($PARAM[id]).ListItem.Status]</value>
	</variable>

  <variable name="ClearlogoVar">
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value>$INFO[ListItem.Art(clearlogo)]</value>
	</variable>

	<variable name="BorderColorVar">
		<value condition="!Skin.HasSetting(Enable.BackgroundBlur)">FF2E2E2E</value>
		<value condition="Skin.HasSetting(Enable.BackgroundBlur)">FF5B5B5B</value>
		<value>FF2E2E2E</value>
		<!-- <value>FF252525</value> -->
	</variable>

	<variable name="FlixPosterVar">
		<value condition="!String.IsEqual(ListItem.DBtype,episode)">$INFO[ListItem.Art(poster)]</value>
		<value condition="String.IsEqual(ListItem.DBtype,episode)">$INFO[ListItem.Art(season.poster)]</value>
		<value>$INFO[ListItem.Art(poster)]</value>
	</variable>

	<variable name="FlixCrumbsVar">
		<!-- <value condition="![String.IsEqual(ListItem.DBtype,movie) | String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,season) | String.IsEqual(ListItem.DBtype,episode)]">$INFO[ListItem.Label,[B] | [/B]]</value> -->
		<value condition="[String.IsEqual(ListItem.DBtype,episode) + !String.StartsWith(Container.PluginCategory,Season)] + !String.IsEmpty(ListItem.Genre)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR accent_color][B]|[/B][/COLOR] ]$INFO[Container($PARAM[list_id]).ListItem.Season, [COLOR accent_color][B]|[/B][/COLOR] S]$INFO[Container($PARAM[list_id]).ListItem.Episode, E]$INFO[Container($PARAM[list_id]).ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="[String.IsEqual(ListItem.DBtype,episode) + String.StartsWith(Container.PluginCategory,Season)] + !String.IsEmpty(ListItem.Genre)">$INFO[Container($PARAM[list_id]).ListItem.TVShowTitle, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="![String.IsEqual(ListItem.DBtype,episode) | String.IsEqual(ListItem.DBtype,movie)] + !String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="String.IsEqual(ListItem.DBtype,movie) + !String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Title, [COLOR accent_color][B]|[/B][/COLOR] ]</value>
		<value condition="String.IsEqual(ListItem.DBtype,movie) + String.IsEmpty(ListItem.Genre)">$INFO[Container($PARAM[list_id]).ListItem.Label, [B]|[/B] ]</value>
	</variable>

	<variable name="SubstituteLabel">
    <value condition="String.IsEqual(ListItem.DbType,movie) | String.IsEqual(ListItem.DbType,tvshow) | String.IsEqual(ListItem.DbType,season) | Container.Content(addons)">$INFO[ListItem.Label]</value>
    <value condition="String.IsEqual(ListItem.DbType,episode)">$INFO[ListItem.TVshowTitle]</value>
	</variable>

	<variable name="DialogInfoTitle">
		<value condition="String.IsEqual(ListItem.DBtype,episode)">$INFO[ListItem.TVShowTitle,,[CR]][LIGHT]$INFO[ListItem.Season,S,: ]$INFO[ListItem.Episode,E, ]$INFO[ListItem.Title][/LIGHT]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>

	<variable name="HomescreenFlixCrumbs">
    <value condition="Window.IsActive(Home) + !Control.HasFocus(14100)">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label] [COLOR accent_color][B]»[/B][/COLOR] </value>
		<value condition="Window.IsActive(Home) + Control.HasFocus(14100)">$VAR[ClockCrumbs]$INFO[Container(9000).ListItem.Label]</value>
	</variable>

	<variable name="TrailerReadyVar">
    <value condition="String.IsEqual(Skin.String(trailerSetting),1) + ![String.IsEqual(ListItem.DbType,episode) | String.IsEqual(ListItem.DbType,season)] + Skin.HasSetting(Enable.TrailerReadyIcon) + !String.IsEmpty(Window.Property(nimbus.trailer_ready))">[COLOR accent_color]▶[/COLOR] </value>
	</variable>

	<variable name="SearchFlixCrumbs">
    <value condition="Window.IsActive(1121)">$VAR[TrailerReadyVar]$VAR[ClockCrumbs]</value>
	</variable>

	<variable name="ClockCrumbs">
    <value condition="Skin.HasSetting(Enable.ClockCrumbs)">$INFO[System.Time] [COLOR accent_color]•[/COLOR] </value>
	</variable>

	<variable name="DefaultSearchWindowBehaviorVar">
    <value condition="Skin.HasSetting(DefaultSearchWindowBehavior)">Open keyboard</value>
    <value>Open search window</value>
	</variable>

	<variable name="OneClickCloseVar">
    <value condition="Skin.HasSetting(OneClickClose)">Exit</value>
    <value>Open shutdown menu</value>
	</variable>

	<variable name="LoadingLabelsVar">
    <value condition="Container.IsUpdating + Window.IsActive(home) + !Skin.HasSetting(TrailerPlaying)">Loading widgets...</value>
    <value condition="Container.IsUpdating + Window.IsActive(1121) + !Skin.HasSetting(TrailerPlaying)">Loading search results...</value>
	</variable>

	<variable name="FocusedColorVar">
    <value condition="![Window.IsVisible(1100) | Skin.HasSetting(Disable.ColorThemeFocus)]">accent_color</value>
    <value condition="Window.IsVisible(1100)">accent_color</value>
    <value>FFCCCCCC</value>
    <!-- <value>FFEAECED</value> -->
    <!-- <value>FFC1C1C1</value> -->
	</variable>

	<variable name="EditMainMenusVar">
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),movies)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=movie.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),tvshows)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=tvshow.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom1)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom1.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom2)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom2.main_menu)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom3)">RunScript(script.nimbus.helper,mode=manage_main_menu_path&amp;cpath_setting=custom3.main_menu)</value>
	</variable>

	<variable name="EditWidgetsVar">
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),movies)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=movie.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),tvshows)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=tvshow.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom1)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom1.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom2)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom2.widget)</value>
    <value condition="String.IsEqual(Container(9000).ListItem.Property(id),custom3)">RunScript(script.nimbus.helper,mode=manage_widgets&amp;cpath_setting=custom3.widget)</value>
	</variable>
	
	<variable name="TitleSettingVar">
    <value condition="String.IsEqual(Skin.String(titleSetting),0)">Default</value>
    <value condition="String.IsEqual(Skin.String(titleSetting),1)">Engebrechtre</value>
    <value condition="String.IsEqual(Skin.String(titleSetting),2)">Westmeath</value>
	</variable>

	<variable name="TitleSettingToggleVar">
		<value condition="String.IsEqual(Skin.String(titleSetting),0)">Skin.SetString(titleSetting,1)</value>
		<value condition="String.IsEqual(Skin.String(titleSetting),1)">Skin.SetString(titleSetting,2)</value>
		<value condition="String.IsEqual(Skin.String(titleSetting),2)">Skin.SetString(titleSetting,0)</value>
		<value>Skin.SetString(titleSetting,0)</value>
	</variable>

	<variable name="ContextMenuTitleVar">
		<value condition="String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,tvshow)">$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.dbtype,season)">$INFO[ListItem.TVShowTitle] [COLOR accent_color]|[/COLOR] $INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.TVShowTitle] [COLOR accent_color]|[/COLOR] S$INFO[ListItem.Season] E$INFO[ListItem.Episode] [COLOR accent_color]|[/COLOR] $INFO[ListItem.Title]</value>
		<value>Context menu</value>
	</variable>

	<variable name="AddonsTitleVar">
		<value condition="!String.IsEqual(ListItem.FolderPath,addons://outdated/)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.FolderPath,addons://outdated/)">$INFO[ListItem.Label] ($INFO[System.AddonUpdateCount])</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>

</includes>